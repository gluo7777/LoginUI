version: '3'
services:
    reverseproxy:
        image: reverseproxy:v1
        build:
            context: ./WebServer
            dockerfile: DockerFile
        ports: 
            - "80:80"
            - "443:443"
        networks: 
            - reverseproxy
        restart: always
    loginui:
        image: loginui:v1
        build:
            context: ./LoginUI
            dockerfile: DockerFile
        depends_on: 
            - reverseproxy
            - loginserver
        networks: 
            - reverseproxy
    loginserver:
        image: loginserver:v1
        build: 
            context: ./LoginServer
            dockerfile: DockerFile
        networks: 
            - service
            - backend
            - reverseproxy
        depends_on: 
            - reverseproxy
            - redis
            - postgres
    redis:
        image: redis:v1
        build:
            context: ./LoginCache
            dockerfile: DockerFile
        networks: 
            - service
        volumes: 
            - cache:/data
    postgres:
        image: postgres:v1
        build: 
            context: ./LoginDB
            dockerfile: DockerFile
            args: 
                CSV: /var/temp/data
        volumes: 
            - postgres:/var/lib/postgresql/data
        networks: 
            - backend
        environment: 
            POSTGRES_DB: loginapp
            POSTGRES_USER: loginapp
            POSTGRES_PASS: supersecretlogin
volumes: 
    postgres:
    cache:
networks: 
    backend:
    service:
    reverseproxy: